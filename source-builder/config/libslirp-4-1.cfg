#
# libslirp 4.x.x Version 1.
#
# This configuration file configure's, make's and install's libslirp.
#

%if %{release} == %{nil}
%define release 1
%endif

Name:      libslirp-%{libslirp_version}-%{_host}-%{release}
Summary:   libslirp v%{libslirp_version} for target %{_target} on host %{_host}
Version:   %{libslirp_version}
Release:   %{release}
URL: 	   https://gitlab.freedesktop.org/slirp/libslirp

#
# If a dry-run and with download ignore errors and correct setting for tools.
# Only after the source to download.
#
%if %{_dry_run} && %{defined with_download}
 %log GLib configuration errors ignored
 %define glib_error 0
%else
 %define glib_error 1
%endif

%define host_triplet %{_host}

#
# Check for meson and ninja
#
%define have_meson %(command -v meson || true)
%define have_ninja %(command -v ninja || true)

%if %{glib_error}
 %if %{have_meson} == %{nil}
  %error "glib: build requires meson, please install"
 %endif
 %if %{have_ninja} == %{nil}
  %error "glib: build requires ninja, please install"
 %endif
%endif

#
# Source
#
%source set libslirp https://gitlab.freedesktop.org/slirp/libslirp/-/archive/v%{libslirp_version}/libslirp-v%{libslirp_version}.tar.gz

#
# Prepare the source code.
#
%prep
  build_top=$(pwd)

  %source setup libslirp -q -n libslirp-v%{libslirp_version}
  %patch setup libslirp -p1

  cd ${build_top}

%build
  build_top=$(pwd)

  cd libslirp-v%{libslirp_version}

  %{host_build_flags}

  SYSROOT=$SB_TMPPREFIX

  # configure the build
  PKG_CONFIG_PATH=$SYSROOT/lib/%{host_triplet}/pkgconfig \
  PKG_CONFIG_BUILD_TOP_DIR=$SB_TMPROOT \
  %{_library_path}=$SYSROOT/lib \
  %{_ld_library_path}=$SYSROOT/lib \
  LD="${CC} ${LDFLAGS}" \
  LD_FOR_BUILD="${CC_FOR_BUILD} ${LDFLAGS}" \
  LDFLAGS="${LDFLAGS} -Wl,-rpath -Wl,/$SB_PREFIX_CLEAN/lib/" \
  meson setup \
    --prefix=%{_prefix} \
    build

  # build using ninja
  ninja -v -C build

  cd ${build_top}

%install
  build_top=$(pwd)

  cd libslirp-v%{libslirp_version}
  %{__rmdir} $SB_BUILD_ROOT

  DESTDIR=$SB_BUILD_ROOT \
  ninja -C build install

  cd ${build_top}
