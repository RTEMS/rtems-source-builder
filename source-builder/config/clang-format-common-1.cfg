#
# clang-format Common Support.
#
# This configuration file configure's, make's and install's clang-format
#

#
# The package description.
#
Name:      rtems-clang-format-%{llvm_version}-%{_host}-%{release}
Summary:   clang-format v%{llvm_version} on host %{_host}
Version:   %{llvm_version}
Release:   %{release}
URL: 	   http://llvm.org/

#
# LLVM Download URL.
#
%define llvm_url https://github.com/llvm/llvm-project/releases/download/llvmorg-%{llvm_version}

%source set llvm-project %{llvm_url}/llvm-project-%{llvm_version}.src.tar.xz

%if %{_build_os} == win32
 %define llvm_build_tools CXX=clang++ CC=clang
%else
 %define llvm_build_tools %{nil}
%endif

%if %{defined with_llvm_verbose}
 %define llvm_verbose VERBOSE=1
%else
 %define llvm_verbose %{nil}
%endif

#
# Prepare the source code.
#
%prep
  # save the build top directory and cd back to it rather than
  # using 'cd ..' because some shells change $PWD to a symlink's
  # target location and 'cd ..' fails.
  build_top=$(pwd)

  llvm_source=%{?llvm_external:%{llvm_expand_name}}%{!?llvm_external:"llvm-project-%{llvm_version}"}

  # llvm is a collection of separate packages, download them and then create
  # the source tree.

  source_dir_llvm=${llvm_source}

  %source setup llvm-project -q -E
  %{__mv} llvm-project-%{llvm_version}.src ${source_dir_llvm}

  %patch setup llvm-project -p1

  cd ${build_top}

%build
  build_top=$(pwd)

  %{build_directory}

  mkdir -p ${build_dir}
  cd ${build_dir}

  %{llvm_build_tools} \
  %{__cmake} -Wno-dev \
    -G "Unix Makefiles" \
    -DLLVM_ENABLE_PROJECTS=clang \
    -DCMAKE_COLOR_MAKEFILE=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=%{_prefix} \
    ../${source_dir_llvm}/llvm

  %{__make} %{?_smp_mflags} %{llvm_verbose} clang-format

  cd ${build_top}

%install
  build_top=$(pwd)

  %{__rmdir} $SB_BUILD_ROOT
  
  cd ${build_dir}
  %{__make} DESTDIR=$SB_BUILD_ROOT install-clang-format
  cd ${build_top}
